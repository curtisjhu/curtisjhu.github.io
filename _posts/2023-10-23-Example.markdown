---
layout: post
title:  "Example"
date:   2023-10-15
categories: applied maths, physics, graphics
---


The pythagorean theorem compares the distance between points.
Dot product can compare the angles between vectors.
How can we compare "distance" between probability distributions?


<div id="graphic"></div>
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/p5.min.js" integrity="sha512-pgK6Wo8doipc/IPQ0ilH3b47ww01345nR9ud1/6Qp0n+lQlEW9zuw6JhysRcUpBY4yKuVZjn1MAkDxbnncuGsQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script> -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.8.0/p5.js" integrity="sha512-bzpp8klYroR6PFgL3RJ+VkvY5hJna7Zd38OA56peUDHSNQpSiN9lDQVnMYtcw7hoAVhbR6mAOdH+ymzg1o+G0A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
const sketch = (p) => {
	let nFrames = 200;
	p.setup = () => {
		p.createCanvas(p.canvas.parentElement.clientWidth, p.windowHeight);
	}
	p.draw = () => {
		let timing = (p.frameCount) / nFrames;
		let diameter = 10;
		p.background(50);
		let xTwo = 3*p.width/4 + 50*p.cos(p.TWO_PI*timing);
		let yTwo = p.height/2 +  100*p.sin(p.TWO_PI*timing);
		let xOne = p.width/4 + 50*p.cos(p.TWO_PI*timing);
		let yOne = p.height/2 +  20*p.sin(p.TWO_PI*timing);
		p.circle(xTwo,yTwo, diameter);
		p.circle(xOne,yOne, diameter);
	}
	p.windowResized = () => {
		p.resizeCanvas(p.canvas.parentElement.clientWidth, p.windowHeight);
	}
}
let instance = new p5(sketch, document.getElementById("graphic"));
</script>


Hello, here's a gist:

<script src="https://gist.github.com/curtisjhu/def0284f6ce183cc656373063c13fba8.js"></script>

The notebook
<iframe width="100%" height="500" frameborder="0"
  src="https://observablehq.com/embed/8776fbf1c395a2e4@36?cell=*"></iframe>

Regl stuff
<iframe width="100%" height="588" frameborder="0"
  src="https://observablehq.com/embed/8776fbf1c395a2e4@50?cells=viewof+regl"></iframe>

# Everything
## Everywhere
### All at once

- yellow
* pillow